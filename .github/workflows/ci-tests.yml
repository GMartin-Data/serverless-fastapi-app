name: Run Python Tests, Linter, and Deploy

on:
  push:
    branches:
      - main
      - "feat/**"
      - "fix/**"
  pull_request:
    branches:
      - main

jobs:
  test-and-lint:
    name: Run linters and pytest suite
    runs-on: ubuntu-latest # Use the latest Ubuntu runner provided by GitHub

    strategy:
      matrix:
        python-version: ["3.12"] # Test against Python 3.12

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.uv/bin" >> $GITHUB_PATH # Add uv's install directory to PATH
          uv --version # Verify installation

      - name: Install dependencies
        run: |
          uv pip install --system -e .  # Install main dependencies and the project itself as editable
          uv pip install --system --group dev  # Install development dependencies

      - name: Lint with ruff
        run: |
          ruff check .

      - name: Check formatting with Ruff
        run: |
          ruff format --check

      - name: Run tests with pytest and coverage
        run: |
          pytest --cov=backend --cov-report=term-missing

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: test-and-lint
    if: github.ref == 'refs/heads/main' && github.event_name == 'push' # Only run on pushes to main

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      # We might not need to setup Python specifically for SAM CLI if it's self-contained
      # or if the runner has a compatible version. But it's safer to include.
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # SAM CLI is often pre-installed on GitHub runners.
      # If not, we would add a step here to install it, e.g.:
      # - name: Install AWS SAM CLI
      #   run: pip install aws-sam-cli

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-3

      - name: Build SAM Application
        working-directory: ./backend
        run: |
          sam build \
          --use-container

      - name: Deploy SAM Application
        run: |
          sam deploy \
          --no-confirm-changeset \
          -no-fail-on-empty-changeset
